[build-system]
requires = ["setuptools>=78.1", "wheel", "numpy>=2.0.0; python_version!='3.8'"]
build-backend = "setuptools.build_meta"

[tool.setuptools]
packages = [
    "arc",
    "arc.advanced",
    # below only store data files
    "arc.data",
    "arc.data.refractive_index_data",
]

[tool.setuptools.package-data]
arc = ["data/*", "data/refractive_index_data/*", "arc_c_extensions.c"]


[project]
name = "ARC-Alkali-Rydberg-Calculator"
description = "Alkali Rydberg Calculator"
version = "3.9.0"
authors = [
    {name = "Nikola Sibalic", email = "nikolasibalic@physics.org"},
    {name = "Elizabeth J. Robertson"},
    {name = "Jonathan D. Pritchard"},
    {name = "Robert M. Potvliege"},
    {name = "Matthew P. A. Jones"},
    {name = "Charles S. Adams"},
    {name = "Kevin J. Weatherill"},
    {name = "and contributors"},
]
keywords = [
    "rydberg",
    "physics",
    "stark maps",
    "atom interactions",
    "quantum optics",
    "van der Waals",
    "scientific",
    "atomic sensors",
    "quantum sensors",
    "alkali atoms",
    "alkaline atoms",
    "divalent atoms",
    "quantum computing",
]
license = {text = "BSD3"}
classifiers = [
    "Programming Language :: Python",
    "Programming Language :: Python :: 3",
    "Intended Audience :: Science/Research",
    "Intended Audience :: Education",
    "License :: OSI Approved :: BSD License",
    "Topic :: Scientific/Engineering",
    "Topic :: Scientific/Engineering :: Physics",
    "Development Status :: 5 - Production/Stable",
]
requires-python = ">=3.9"
dependencies = [
    "scipy>=0.18.1",
    "numpy>=2.0",
    "matplotlib>=1.5.3",
    "sympy>=1.1.1",
    "lmfit>=0.9.0",
    "rich>=13.9.4",
    "h5py>=3.11.0",
]

[project.readme]
file = "README.md"
content-type = "text/markdown"

[project.urls]
Homepage = "https://atomcalc.org/"
Repository = "https://github.com/nikolasibalic/ARC-Alkali-Rydberg-Calculator"
Documentation = "https://arc-alkali-rydberg-calculator.readthedocs.io/en/latest/"
Download = "https://github.com/nikolasibalic/ARC-Alkali-Rydberg-Calculator/archive/refs/tags/v3.9.0.tar.gz"

[dependency-groups]
dev = [
    "cibuildwheel>=2.23.2",
    "coverage>=7.6.1",
    "mypy>=1.14.0",
    "pytest>=8.3.4",
]

[tool.cibuildwheel]
skip = ["*-win32", "*-manylinux_i686", "*-musllinux_i686" ,"pp*"]

[tool.mypy]
disable_error_code = ["import-untyped", "import-not-found"]

[tool.ruff]
# Exclude a variety of commonly ignored directories.
exclude = [
    ".bzr",
    ".direnv",
    ".eggs",
    ".git",
    ".git-rewrite",
    ".hg",
    ".ipynb_checkpoints",
    ".mypy_cache",
    ".nox",
    ".pants.d",
    ".pyenv",
    ".pytest_cache",
    ".pytype",
    ".ruff_cache",
    ".svn",
    ".tox",
    ".venv",
    ".vscode",
    "__pypackages__",
    "_build",
    "buck-out",
    "build",
    "dist",
    "node_modules",
    "site-packages",
    "venv",
    "*.ipynb"
]

# Same as Black.
line-length = 80
indent-width = 4

# Assume Python 3.11
target-version = "py311"

[tool.ruff.lint]
# Enable Pyflakes (`F`) and a subset of the pycodestyle (`E`)  codes by default.
# Unlike Flake8, Ruff doesn't enable pycodestyle warnings (`W`) or
# McCabe complexity (`C901`) by default.
select = ["E4", "E7", "E9", "F"]
ignore = []

# Allow fix for all enabled rules (when `--fix`) is provided.
fixable = ["ALL"]
unfixable = []

# Allow unused variables when underscore-prefixed.
dummy-variable-rgx = "^(_+|(_+[a-zA-Z0-9_]*[a-zA-Z0-9]+?))$"

[tool.ruff.format]
# Like Black, use double quotes for strings.
quote-style = "double"

# Like Black, indent with spaces, rather than tabs.
indent-style = "space"

# Like Black, respect magic trailing commas.
skip-magic-trailing-comma = false

# Like Black, automatically detect the appropriate line ending.
line-ending = "auto"

# Enable auto-formatting of code examples in docstrings. Markdown,
# reStructuredText code/literal blocks and doctests are all supported.
#
# This is currently disabled by default, but it is planned for this
# to be opt-out in the future.
docstring-code-format = false

# Set the line length limit used when formatting code snippets in
# docstrings.
#
# This only has an effect when the `docstring-code-format` setting is
# enabled.
docstring-code-line-length = "dynamic"

